/* 
 This is a boilerplate has all the styles we shall use in the build. 
 You will find comments on specific styles and reasons for them along 
 with links to read more for your better understanding. 

 If you find yourself stuck in any of our codebase, just chat with us
 and we'll help out. 

 You can join the Slack community here:https://communityinviter.com/apps/j-for-javascript/join-the-community
 Subscribe to my YouTube channel here:https://www.youtube.com/channel/UCeno4p-lBEFZjJKaJyt04aw

 Happy coding!
*/

/* GOOGLE FONTS IMPORT */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");
/* ------------------- */

/* 
CSS VARIABLES - You can add more like your font-sizes, font-families, anything you want.

You may read more CSS variables here:https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties
*/
:root {
  --heading-colour: #1f1f25;
  --bg-colour: #e7e7e9;
  --font-colour: #757575;
  --btn-colour: #fd4766;
  --white-colour: #ffffff;
  --light-grey-colour: #cccc;
  --hover-colour: #000000;
  --orange-colour: #dd7732;
}

/* 
The CSS [attribute="value"] Selector is used to select
 elements with a specified attribute and value.

For example here below, our [data-theme="dark"] is the one
we shall use to determine what styles we use in the dark mode.

You may read more on CSS Attribute selectors here: https://www.w3schools.com/css/css_attribute_selectors.asp
*/
[data-theme="dark"] {
  --heading-colour: #e7e7e9;
  --bg-colour: #000;
  --font-colour: #757575;
  --btn-colour: #fd4766;
  --white-colour: #ffffff;
  --light-grey-colour: #cccc;
  --hover-colour: #ffffff;
}
/* -------------------------------------------- */
/* END OF CSS VARIABLES */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

/* ELEMENT SELECTORS */
body {
  background-color: var(--bg-colour);
}

main {
  padding: 90px;
}
/* main media queries */
@media screen and (max-width: 768px) {
  main {
    padding: 30px;
  }
}
/* ------------------- */
a {
  text-decoration: none;
}

nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 30px 100px;
}

/* nav media queries */
@media screen and (max-width: 768px) {
  nav {
    padding: 15px 20px;
  }
}
/* ------------------ */
img {
  border-radius: 10px;
  height: 600px;
}

/* img media queries */
@media screen and (max-width: 768px) {
  .img-container img {
    display: none;
  }
}
/* ------------------------ */

/* i for fontawesome icons */
i.fa-brands {
  cursor: pointer;
  margin-right: 10px;
  font-size: 30px;
  color: var(--font-colour);
}
/* i media queries */
@media screen and (max-width: 768px) {
  i.fa-brands {
    font-size: 25px;
  }
}
/* ------------------------- */
i.fa-brands:hover {
  color: var(--hover-colour);
}
/* END OF ELEMENT SELECTORS */

.hero {
  width: 100%;
  height: 100vh;
}

.logo {
  max-height: 60px;
  margin-right: 10px;
}

/* logo media queries */
@media screen and (max-width: 768px) {
  .logo {
    max-height: 40px;
  }
}

/* ------------------------ */

/* Slider toggle switch */
.theme-switch-wrapper {
  display: flex;
  align-items: center;
}

.theme-switch {
  display: inline-block;
  height: 34px;
  position: relative;
  width: 60px;
}

.theme-switch input {
  display: none;
}

.slider {
  background-color: var(--orange-colour);
  bottom: 0;
  cursor: pointer;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  transition: 0.4s;
}
/* 
The :before selector inserts something before the content 
of each selected element(s).
This allows you to insert 'content' without using HTML.

In our project it is the white cirle that we shall use to 
toggle dark and light mode on.

You can read more on the :before and :after psuedo elments here: https://css-tricks.com/almanac/selectors/a/after-and-before/
*/
.slider:before {
  background-color: var(--white-colour);
  bottom: 4px;
  content: "";
  height: 26px;
  left: 4px;
  position: absolute;
  transition: 0.4s;
  width: 26px;
}
/* ----------------------------------------------- */
/* 
The + symbol in CSS also called adjacent sibling selector
is used to select an element that is directly after another 
specific element.

In our code below, when the input is checked, the 
background colour of the slider will turn green.

You can read more on the CSS combinators here:https://w3schools.com/css/css_combinators.asp

*/
input:checked + .slider {
  background-color: #66bb6a;
}

input:checked + .slider:before {
  transform: translateX(26px);
}
/* ----------------------------------------- */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}
/* End of Slider toggle switch */

/* CSS grid container */
.grid-section {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  height: 50vh;
}
/* grid-section media queries */

@media screen and (max-width: 808px) {
  .grid-section {
    grid-template-columns: 1fr;
  }
}
/* ---------------------------- */

/* Grid Column 1 */
.content {
  padding-left: 50px;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

@media screen and (max-width: 768px) {
  .content {
    padding-left: 0px;
  }
}

.content .title {
  /* color: var(--heading-colour); */
  font-size: 16px;
  text-transform: uppercase;
  letter-spacing: 4px;
  display: inline-block;
  margin-bottom: 20px;
  color: #1c99fe;
}
/* content title media queries */
@media screen and (max-width: 768px) {
  .content .title {
    font-size: 12px;
  }
}
/* --------------------------------- */

.content h1 {
  color: var(--heading-colour);
  font-size: 75px;
  font-weight: 900;
  line-height: 90px;
  text-transform: inherit;
  width: 90%;
}

/* content h1 media queries */
@media screen and (max-width: 768px) {
  .content h1 {
    font-size: 40px;
    line-height: 40px;
    width: 95%;
  }
}
/* ----------------------------- */
.content h1 span.typed-text {
  font-weight: normal;
  color: var(--orange-colour);
}
.content h1 span.cursor {
  display: inline-block;
  background-color: #444;
  margin-left: 0.1rem;
  width: 3px;
  animation: blink 1s infinite;
}
.content h1 span.cursor.typing {
  animation: none;
}
/* 
 Keyframes help us animate elements from 0 - 100%. 
 This one keyframe simply starts at colour grey then gradually
 goes transparent around 50-99% to imitate the cursor behavour and
 finally starts at grey again at 100%.

 You can read more about keyframes in CSS here: https://www.w3schools.com/cssref/css3_pr_animation-keyframes.asp
 */
@keyframes blink {
  0% {
    background-color: var(--light-grey-colour);
  }
  49% {
    background-color: var(--light-grey-colour);
  }
  50% {
    background-color: transparent;
  }
  99% {
    background-color: transparent;
  }
  100% {
    background-color: var(--light-grey-colour);
  }
}
/* ----------------------------------------- */

.content p {
  width: 75%;
  color: var(--font-colour);
  margin-top: 25px;
  margin-bottom: 30px;
}
@media screen and (max-width: 768px) {
  .content p {
    font-size: 12px;
    width: 90%;
  }
}
/* Common classes btn and btn2 share in common to avoid unnecessary repetition */
.btn,
.btn2 {
  cursor: pointer;
  font-size: 16px;
  text-transform: uppercase;
  letter-spacing: 2px;
  padding: 16px 40px;
  border-radius: 500px;
  display: inline-block;
  font-weight: 500;
  transition: all 0.4s ease-in-out;
  background-size: 152% 100%;
  width: 250px;
  margin-right: 10px;
}
/* ---------------------------------- */

/* btn and btn2 media queries */
@media screen and (max-width: 768px) {
  .btn,
  .btn2 {
    width: 130px;
    font-size: 10px;
    padding: 10px 10px;
  }
}
/* ------------------------------ */

/* -------------------------------- */
/* btn class is the one assigned to Download CV button in our HTML file */
.btn {
  color: var(--white-colour);
  background: var(--btn-colour);
  border: 2px solid var(--btn-colour);
}
.btn:hover {
  background: transparent;
  border-color: var(--btn-colour);
  color: var(--btn-colour);
}
/* -------------------------------- */

/* btn2 class is the one assigned to Email Me anchor element in our HTML file */
.btn2 {
  display: flex;
  color: var(--btn-colour);
  background: transparent;
  border: 2px solid var(--btn-colour);
  justify-content: center;
}
.btn2:hover {
  background: var(--btn-colour);
  border-color: var(--btn-colour);
  color: var(--white-colour);
}
/* -------------------------------- */

.btn-container {
  display: flex;
  margin-bottom: 20px;
}
.icon-container {
  margin-top: 20px;
  display: flex;
  justify-content: start;
}
/* End of Grid Column 1 */

/* Grid Column 2 */
.img-container {
  display: flex;
  justify-content: start;
}
/* img-container media queries */
@media screen and (max-width: 808px) {
  .img-container {
    justify-content: center;
    margin-top: 30px;
  }
}
/* ----------------- */

/* End of Grid Column 2 */
/* End of CSS grid container */
